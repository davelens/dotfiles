#!/usr/bin/env bash
set -e
eval "$(source_env)"

# Gracefully handle Ctrl-C to get out of this thing.
handle_interrupt() {
  echo "Aborted."
  exit 1
}
trap handle_interrupt SIGINT

# This command is used to provide suggestions among both my personal as well as
# my work's public and private repositories.

[[ ! $(command -v jq) ]] && brew install jq

# Access to private repositories will require a Github access token with the
# "repo" scope.
if [[ -z $GITHUB_PERSONAL_ACCESS_TOKEN ]]; then
  echo "ERROR: No Github personal access token set."
  echo
  echo "  1. Create one here: https://github.com/settings/tokens"
  echo ""
  echo "  2. Make sure the token has access to the 'repo' scope."
  echo "     (This means full read-only access to private repositories)"
  echo
  echo "  3. Store it in GITHUB_PERSONAL_ACCESS_TOKEN and make sure it's available."
  echo
  exit 1
fi

usage() {
  echo
  echo "Usage: utility github $(basename "$0") <qualifier>"
  echo
  echo "Options:"
  echo "  -h|--help            Show this help message and exit."
  echo "  -v|--verbose         Enable verbose output for curl calls."
  echo "  <qualifier>          The Github-specific search qualifier to filter the results."
  echo "                       (e.g. 'Phoenix Framework', 'author:johndoe', 'user:johndoe+user:maryjane', ...)"
  echo
  echo
  echo "You can read up on Github search qualifiers for repositories here:"
  echo
  echo "  https://github.com/github/docs/blob/main/content/search-github/searching-on-github/searching-for-repositories.md"
  echo
}

# Fail early if no arguments are given.
[[ $# -eq 0 ]] && usage && exit 1

verbal=false
query=""
page=1
results=()

while [[ $# -gt 0 ]]; do
  case "$1" in
  -h | --help)
    usage && exit 0
    ;;
  -v | --verbal)
    verbal=true
    shift
    ;;
  *)
    query="$1"
    shift
    ;;
  esac
done

# No query, no results.
[ -z "$query" ] && usage && exit 1

# Recursively search for repositories.
search() {
  local url="https://api.github.com/search/repositories?q=${query// /+}&per_page=100&page=$page"

  # Print out the requests if verbal mode is enabled.
  $verbal && echo "GET $url"

  local repositories=("$(curl -s --header "Authorization: token $GITHUB_PERSONAL_ACCESS_TOKEN" --url "$url" | jq -r 'try .items[] .full_name')")

  results=("${results[@]}" "${repositories[@]}")

  if [[ ${#repositories[@]} -eq 100 ]]; then
    ((page++))
    search
  fi
}

# Perform the initial search
# Notify the user in verbose mode when we start polling Github.
$verbal && echo "Collecting data from Github ... "
search

# Output results to fzf for selection, and Bob's your uncle.
for repo in "${results[@]}"; do
  echo "$repo"
done | fzf
