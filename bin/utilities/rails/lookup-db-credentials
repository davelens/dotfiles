#!/usr/bin/env bash

# This file assumes Bash 4.x to be able to use associative arrays.

set -e

me=$(basename "$0")
env=development
key=
app=.

for i in "$@"; do
  case $i in
  --app=*)
    app="${i#*=}"
    ;;
  --key=*)
    key="${i#*=}"
    ;;
  -t | --test)
    env="test"
    ;;
  -s | --staging)
    env="staging"
    ;;
  -p | --production)
    env="production"
    ;;
  *)
    # unknown options
    echo "[$me] ERROR: Unknown option '$i'"
    echo "Usage: utility rails $(basename "$0") [-kpst] [--test] [--staging] [--production]"
    printf "\t[--app=path]\n"
    printf "\t[--key=name]\n"
    exit
    ;;
  esac
done

# TODO: If the database name for staging/production ends in "_dev", ask for
# confirmation with an option to exit early. This way db-import can handle the
# fallback to a default DB.

if [ -z "$key" ]; then
  printf "ERROR: Missing key name to lookup. Must be one of:\n\n"
  printf "\thost, database, username, password, adapter, encoding, pool, timeout\n\n"
  exit
fi

declare -A db_credentials=$(utility rails format-db-credentials-for-bash $env "$(realpath "$app")")
echo "${db_credentials[$key]}"
unset db_credentials
