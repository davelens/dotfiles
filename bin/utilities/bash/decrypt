#!/usr/bin/env bash

name="decrypt"

usage() {
  echo
  echo "Usage: $name [-h|--help] [-i|-f] <input>"
  echo
  echo "Removes aes-256-cbc encryption from a string or file using openssl."
  echo "Works in tandem with \`encrypt\`."
  echo
  echo "Examples:"
  echo "  $name -p mypasskey -f bw-mp.enc"
  echo "  $name -f test.enc"
  echo
  echo "Options:"
  echo "  -h|--help                   Show this help message and exit."
  echo "  -i|--in <string>            Provide a value to decrypt."
  echo "  -f|--file                   Provide path to a file to decrypt."
  echo "  -p|--passkey <string>       Provide a passkey to decrypt with."
  echo "                              (NOTE: No spaces!)"
}

###############################################################################

MYTMPDIR=$(mktemp -d 2>/dev/null || mktemp -d -t "$DOTFILES_STATE_HOME/tmp/$name.XXXXXX")

call_openssl() {
  local string="openssl aes-256-cbc -d -pbkdf2"

  if [[ -z "$passkey" ]]; then
    # TODO: Run command to generate and set the salt.
    passkey="$DOTFILES_SALT"
  fi

  [[ -n $passkey ]] && string+=" -k $passkey"
  string+=" -in $input"

  $string
}

main() {
  # Fail early if no arguments are given.
  [[ $# -eq 0 ]] && usage && exit 0

  local input output passkey tempfile

  while [[ $# -gt 0 ]]; do
    case $1 in
    -h | --help)
      usage
      exit 0
      ;;
    -f | --file)
      shift
      if [[ ! -f $1 ]]; then
        $print_status -i error "Input file not found: $1"
        usage && exit 1
      fi
      input="$1"
      shift
      ;;
    -i | --in)
      shift
      input="$1"

      if [[ -p /dev/stdin ]]; then
        input="$(cat /dev/stdin)"
      fi

      tempfile=$(mktemp -p "$MYTMPDIR")
      printf "%s" "$input" >"$tempfile"
      input="$tempfile"
      shift
      ;;
    -p | --passkey)
      shift
      passkey="$1"
      shift
      ;;
    *)
      $print_status -i error "Invalid option: $1"
      usage && exit 1
      ;;
    esac
  done

  if [[ -z $input ]]; then
    $print_status -i error "You need to provide a string or file to encrypt."
    usage && exit 1
  fi

  call_openssl
}

###############################################################################
unset name
main "$@"
