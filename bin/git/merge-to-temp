#!/usr/bin/env bash

# mt stands for "merge into temp". The temp branch is a branch I regularly use
# that gets pushed to staging. It's used to combine features in development
# for review, as well as a testing ground to see if certain features conflict.

# Stops further execution after any error.
set -e

if [ ! -d ".git" ]; then
  echo "EXIT: Local working directory is not a cloned git repo."
  exit
fi

if [ ! `git branch --list temp` ]; then
  echo "Creating missing temp branch..."
  git checkout -b temp
else
  echo "Switching to temp branch..."
  git checkout temp
fi

deploy_to_staging() {
  if [ ! -f config/deploy/staging.rb ]; then
    echo "No capistrano staging environment is configured\!" && exit
  fi

  sed -i -e "s/set :branch, 'develop'/set :branch, ENV['BRANCH'] || 'develop'/g" config/deploy/staging.rb

  echo "Deploying temp branch to staging..."
  bundle exec cap staging deploy BRANCH=temp
}

ask_to_push_to_temp() {
  while true; do
    read -p "Do you want to push to the remote temp branch? " yn
    case $yn in
      [Yy]* ) git push origin temp; break;;
      [Nn]* ) break;;
      * ) echo "Please answer `tput smul`Y`tput rmul`es or `tput smul`N`tput rmul`o.";;
    esac
  done
}

ask_to_deploy() {
  while true; do
    read -p "Do you want to deploy the temp branch to staging? " yn
    case $yn in
      [Yy]* ) deploy_to_staging; break;;
      [Nn]* ) break;;
      * ) echo "Please answer `tput smul`Y`tput rmul`es or `tput smul`N`tput rmul`o.";;
    esac
  done
}

post_merge() {
  ask_to_push_to_temp
  ask_to_deploy
  git checkout $(git b)
}

branch=$(git b)
echo "Merging $branch into temp branch..."
git merge --no-ff $branch && post_merge
rm config/deploy/staging.rb-e
