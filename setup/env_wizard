#!/usr/bin/env bash

# Function to prompt for input with a default value
prompt() {
  local var_name="$1"
  local prompt_text="$2"
  local default_value="$3"
  local input
  read -rp "${prompt_text} [${default_value}]: " input
  echo "${input:-$default_value}"
}

# Make sure we have the necessary tools in our environment.
[[ ! `command -v jq` ]] && brew install jq
[[ ! `command -v bw` ]] && brew install bitwarden-cli

# Check if Bitwarden CLI is logged in
if ! bw status | grep -q "locked"; then
  echo "Bitwarden is locked or not logged in. Please run 'bw unlock' before continuing."
  exit 1
fi

# Load existing .env if available
env_file="${HOME}/.env"
if [[ -f $env_file ]]; then
  source "$env_file"
  echo "Loaded existing environment variables from $env_file."
fi

# Collect data
REPO_NAMESPACE=$(prompt "REPO_NAMESPACE" "Where do you keep your local Git(hub) repos?" "${REPO_NAMESPACE}")
GITHUB_USERNAME=$(prompt "GITHUB_USERNAME" "Enter your GitHub username" "${GITHUB_USERNAME}")
GITHUB_EMAIL=$(prompt "GITHUB_EMAIL" "Enter your GitHub email address" "${GITHUB_EMAIL}")
GPG_SIGNING_KEY=$(prompt "GPG_KEY" "Enter your GPG signing key" "${GPG_SIGNING_KEY}")

# Retrieve GitHub API token using Bitwarden
echo "Retrieving GitHub API token from Bitwarden..."
GITHUB_API_TOKEN=$(bw get item "github@davelens.be" | jq -r '.fields[] | select(.name == "Github API Token") | .value')
if [[ -z $GITHUB_API_TOKEN ]]; then
  echo "Failed to retrieve GitHub API token. Please ensure it exists in Bitwarden."
  exit 1
fi

# Derive the dotfiles' absolute path so we always have a sensible default for 
# the ~/.env file.
dotfiles_derived_path=$(dirname $(dirname $(realpath "$0")))

# Write to .env
cat > "$env_file" <<EOF
# This file is generated by $dotfiles_derived_path/setup/env_wizard.
# If you add your own global ENV vars below, remember to backport them to it.
REPO_NAMESPACE="$(realpath -m "${REPO_NAMESPACE/#\~/$HOME}")"
DOTFILES_PATH="$dotfiles_derived_path"
GITHUB_API_TOKEN=$GITHUB_API_TOKEN
GITHUB_USERNAME=$GITHUB_USERNAME
GITHUB_EMAIL=$GITHUB_EMAIL
GPG_SIGNING_KEY=$GPG_SIGNING_KEY
EOF

# Make our ENV vars available immediately.
[[ -f "$dotfiles_derived_path/bash/helpers.sh" ]] && source "$dotfiles_derived_path/bash/helpers.sh"
echo "Environment variables saved to $env_file."
echo "Please source it or restart your shell to apply changes."
