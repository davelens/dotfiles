#!/usr/bin/env bash
set -e

readonly DOTBOT_DIR="dotbot"
readonly DOTFILES_PATH="$(dirname $(dirname $(realpath "$0")))"

# Trying to adhere to the XDG Base Directory Specification.
source "$DOTFILES_PATH/config/xdg_paths"

# Get dotbot installed
git -C "${DOTFILES_PATH}/${DOTBOT_DIR}" submodule sync --quiet --recursive
git -C "${DOTFILES_PATH}/${DOTBIT_DIR}" submodule update --init --recursive

# Activate dotbot with the install configuration
"${DOTFILES_PATH}/${DOTBOT_DIR}/bin/dotbot" -d "${DOTFILES_PATH}" -c "${DOTFILES_PATH}/setup/install.conf.yaml" "${@}"

[[ ! -f "${DOTFILES_CONFIG_PATH}/env" ]] && \
  "$DOTFILES_PATH/setup/env_wizard" || \
  touch "${DOTFILES_CONFIG_PATH}/.env"

#grep -q 'DOTFILES_PATH' "${DOTFILES_CONFIG_PATH}/env" || echo "DOTFILES_PATH=${DOTFILES_PATH}" >> ~/.env
#grep -q 'DOTFILES_STATE_PATH' "${DOTFILES_CONFIG_PATH}/env" || echo "DOTFILES_STATE_PATH=${DOTFILES_STATE_PATH}" >> ~/.env

# Create an executable that allows us to update our dotfiles, among other 
# things.
dots_path="${HOME}/.local/bin/dots"
if [ ! -f "$dots_path" ]; then
  ln -s "${DOTFILES_PATH}/setup/dots" $dots_path
  chmod +x $dots_path
  echo "$(check) dots command installed."
  echo "    From now on you can use 'dots update' anywhere to pull in the latest dotfiles."
  echo
  echo "Please source $BASHRC or restart your shell to apply changes."
fi
