ask_questions() {
  read -rp "GitHub username: " GITHUB_USERNAME </dev/tty
  read -rp "GitHub email: " GITHUB_EMAIL </dev/tty
  read -rsp "GitHub personal access token: " GITHUB_PERSONAL_ACCESS_TOKEN </dev/tty
  read -rsp "Claude Code OAuth token: " CLAUDE_CODE_OAUTH_TOKEN </dev/tty
  echo
  echo
}

bw_search() {
  session="$BW_SESSION"
  [ -z "$session" ] && session="$(bw_session)"
  bw list items --search "$1" --session "$session"
}

bw_session() {
  if [ "$(bw status | jq '.status')" == '"unauthenticated"' ]; then
    BW_SESSION=$(bw login --raw </dev/tty)
    export BW_SESSION
  elif [ -z "$BW_SESSION" ]; then
    BW_SESSION=$(bw unlock --raw </dev/tty)
    export BW_SESSION
  fi

  echo "$BW_SESSION"
}

use_bitwarden() {
  if command -v bw >/dev/null; then
    if [ -n "$(brew outdated bitwarden-cli)" ]; then
      brew upgrade bitwarden-cli
    fi
  else
    brew install bitwarden-cli
  fi

  # Establish session once upfront
  BW_SESSION=$(bw_session)
  export BW_SESSION

  github_data="$(bw_search "GitHub")"
  GITHUB_PERSONAL_ACCESS_TOKEN=$(echo "$github_data" | jq -r '.[].fields | map(select(.name == "Personal access token"))[0].value')
  GITHUB_USERNAME=$(echo "$github_data" | jq -r '.[].fields | map(select(.name == "Public username"))[0].value')
  GITHUB_EMAIL=$(echo "$github_data" | jq -r '.[].login.username')

  anthropic_data="$(bw_search "Anthropic")"
  CLAUDE_CODE_OAUTH_TOKEN=$(echo "$anthropic_data" | jq -r '.[].fields | map(select(.name == "CLAUDE_CODE_OAUTH_TOKEN"))[0].value')
}

write_dots_env_file() {
  local env_file="$DOTFILES_CONFIG_HOME/env"

  echo "# Generated by my dotfiles' install script on $(date)" >"$env_file"

  declare -p \
    REPO_NAMESPACE \
    DOTFILES_REPO_HOME \
    GITHUB_EMAIL \
    GITHUB_USERNAME \
    GITHUB_PERSONAL_ACCESS_TOKEN \
    GITHUB_SIGNING_KEY \
    CLAUDE_CODE_OAUTH_TOKEN |
    sed 's/declare -[-x] /export /g' >>"$env_file"
}

write_gitconfig_env_file() {
  local env_file="$XDG_CONFIG_HOME/git/config.env"
  local template_file="$DOTFILES_REPO_HOME/setup/gitconfig.env.template"

  echo "# Generated by my dotfiles' install script on $(date)" >"$env_file"

  content=$(envsubst <"$template_file")
  echo "$content" >>"$env_file"
}

main() {
  if command -v bw >/dev/null; then
    use_bitwarden
  else
    ask_questions
  fi

  [ -f "$HOME"/.ssh/id_rsa.pub ] && GITHUB_SIGNING_KEY="$HOME/.ssh/id_rsa.pub"

  export GITHUB_EMAIL
  export GITHUB_USERNAME
  export GITHUB_PERSONAL_ACCESS_TOKEN
  export GITHUB_SIGNING_KEY
  export CLAUDE_CODE_OAUTH_TOKEN

  write_dots_env_file
  write_gitconfig_env_file
}

echo
echo "4. $(underline "CONFIGURE ENVIRONMENT")"
echo

save_cursor

main "$@"

# shellcheck disable=SC2181
if [ $? -eq 0 ]; then
  reset_prompt
  echo "âœ“ $(fgreen "Environment configured! Remember to use $(black "dots update")")$(fgreen " once in a while")"
else
  fail "x $(fred "Something went wrong during step 4.")"
fi
